<?php

function manager_dashboard_menu() {
  $items = array();
  $items['manager/dashboard'] = array(
    'title' => 'Manager Dashboard',
    'description' => 'A dashboard for managers',
    'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
    'page arguments' => array('manager_dashboard_form'), //put the name of the form here
    'access arguments' => array('view_manager_dashboard'),
  );
  
  // For the default local task, we need very little configuration, as the
  // callback and other conditions are handled by the parent callback.
  $items['manager/dashboard/default'] = array(
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'title' => 'Conflicts',
    'description' => 'A dashboard for Manager',
    'access arguments' => array('view_manager_dashboard'),
    'weight' => 1,
    
  );
  
  $items['manager/dashboard/requests'] = array( //this creates a URL that will call this form at "examples/form-example"
    'type' => MENU_LOCAL_TASK,
    'title' => 'Requests', //page title
    'description' => 'A dashboard for staff displaying all the requests',
    'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
    'page arguments' => array('requests_form'), //put the name of the form here
    'access arguments' => array('view_manager_dashboard'),
    'weight' => 2,  
    
  );
  
  $items['manager/dashboard/lead-selection'] = array( //this creates a URL that will call this form at "examples/form-example"
    'type' => MENU_LOCAL_TASK,
    'title' => 'Lead Selection', //page title
    'description' => 'A dashboard for staff displaying all the collisions',
    'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
    'page arguments' => array('lead_selection_form'), //put the name of the form here
    'access arguments' => array('lead_selection'),
    'weight' => 3,  
    
  );
  
  return $items;
  
}

function createManagerDashboardTable($form, &$form_state) {
  
  drupal_set_message(t('Hitting Accept will delete other classes and publish the Accepted class.<br>
  However, an email will be sent notifying other users that their classes has been rejected.'), 'warning');
  
  $result = db_query("SELECT * 
                   FROM collision 
                   WHERE flag = 1");
                     
	$header = array('Room Name', 'Start Date', 'End Date', 'Course Name', 'CRN', 'Status', 'User');
	
	$rows = array();
	
	$form['collisions'] = array(
	  
    '#prefix' => '<div id="collisions">',
    
    '#suffix' => '</div>',
    
    '#tree' => TRUE,
    
    '#theme' => 'table',
    
    '#header' => $header,
    
    '#rows' => $rows,
    
  );
  
	// Looping for filling the table rows
	while($data = $result->fetchObject()) {
  
	  $collision_id = $data->collision_id;
	  
    $roomName = array(
      
      '#type' => 'item',
      
      '#title' => t($data -> room_name),
      
    );
    
    $startTime = array(
      
      '#type' => 'item',
      
      '#title' => t($data -> start_time),
      
    );
    
    $endTime = array(
      
      '#type' => 'item',
      
      '#title' => t($data -> end_time),
      
    );
    
    $crn = array(
      
      '#type' => 'item',
      
      '#title' => t($data -> CRN),
      
    );
    
    $courseName = array(
      
      '#type' => 'item',
      
      '#title' => t($data -> course_name),
      
    );
    
    $status = array(
      
      '#type' => 'item',
      
      '#title' => t('Published'),
      
    );
    
    $userName = array(
      
      '#type' => 'item',
      
      '#title' => t($data -> user_name),
      
    );

    $form['collisions']['#rows'][] = array(
      
      array('data' => &$roomName),
      
      array('data' => &$startTime),
      
      array('data' => &$endTime),
      
      array('data' => &$courseName),
      
      array('data' => &$crn),
      
      array('data' => &$status),
      
      array('data' => &$userName),
      
    );
    
    unset($roomName);
      
    unset($startTime);
      
    unset($endTime);
      
    unset($courseName);
    
    unset($crn);
      
    unset($status);
      
    unset($userName);
    
    $res = db_query("SELECT * 
                     FROM collision 
                     WHERE collision_id = '$collision_id' 
                     AND flag = 0");
    
    while($dt = $res->fetchObject()) {
  	  
      $accept = array(
        
        '#type' => 'item',
        
        '#markup' => _manager_redirect_handler_link('Accept', 'manager/redirect', 'collision', $dt->room_name, $dt->room_id, $dt->start_time, $dt->end_time, $dt->course_name, $dt->CRN, $dt->user_name, $dt->user_id, $dt-> nid, $collision_id),
        
      );
      
      $reject = array(
        
        '#type' => 'item',
        
        '#markup' => _manager_redirect_handler_link('Reject', 'manager/redirect', 'collision', $dt->room_name, $dt->room_id, $dt->start_time, $dt->end_time, $dt->course_name, $dt->CRN, $dt->user_name, $dt->user_id, $dt-> nid, $collision_id),
        
      );
      
      $edit = array(
        
        '#type' => 'item',
        
        '#markup' => _manager_redirect_handler_link('Edit Course', 'edit/event', 'collision', $dt->room_name, $dt->room_id, $dt->start_time, $dt->end_time, $dt->course_name, $dt->CRN, $dt->user_name, $dt->user_id, $dt-> nid, $collision_id),
           
      );
      
      $courseName = array(
        
        '#type' => 'item',
        
        '#title' => t($dt -> course_name),
        
      );
      
      $status = array(
        
        '#type' => 'item',
        
        '#title' => t('Conflict'),
        
      );
      
      $userName = array(
        
        '#type' => 'item',
        
        '#title' => t($dt -> user_name),
        
      );
      
      $crn = array(
        
        '#type' => 'item',
        
        '#title' => t($dt -> CRN),
        
      );
  
      $form['collisions']['#rows'][] = array(
        
        array('data' => &$accept),
        
        array('data' => &$reject),
        
        array('data' => &$edit),
        
        array('data' => &$courseName),
        
        array('data' => &$status),
        
        array('data' => &$userName),
        
        array('data' => &$crn),
        
      );
      
      unset($accept);
        
      unset($reject);
        
      unset($edit);
        
      unset($courseName);
        
      unset($status);
        
      unset($userName);
      
      unset($crn);
      
  	}
    
	}
	  
	return $form;
	  
}

function manager_dashboard_form($form, &$form_state) {
  
  $form = createManagerDashboardTable($form, $form_state);
  
  return $form;
  
}

?>